@model ErrorLogViewModel

@{
	ViewBag.Title = "ErrorLogId: "+Model.ErrorLogId;
}

@section Head {
<style>
ul {
	list-style: none;
	padding: 0;
}
li {
	list-style: none;
	margin: 0;	
}
.view-label {
	font-weight: bold;
}
.exception-info {
	background-color: #fefecd;
	padding-top: 10px;
	padding-bottom: 10px;
}
</style>
}

@Html.ActionLink("<< Back to List", "Index")

<h2>@ViewBag.Title</h2>

<span class="view-label">Date:</span>
<span class="view-data">@Model.CreatedDate.ToString("G")</span><br />

<span class="view-label">User:</span>
<span class="view-data">@Model.UserId: @Model.Email</span><br />

<span class="view-label">Url:</span>
<span class="view-data">@Model.PageUrl:</span><br />

<span class="view-label">Referrer:</span>
<span class="view-data">@Model.ReferrerUrl</span><br />

<span class="view-label">UserAgent:</span>
<span class="view-data">@Model.UserAgent</span><br />

<span class="view-label">Client IP:</span>
<span class="view-data">@Model.ClientIp</span><br />

<br />
<div class="view-label">User Message:</div>
<div class="view-data view-data-pre">@Model.Message</div>
<br />
<div class="view-label">Exception Details:</div>
<div class="view-data exception-info">
	@if ( Model.ExceptionInfo != null ) {
		<text>
		@this.RenderException( Model.ExceptionInfo )
		</text>
	} else {
		<text>
		@Html.CRLF( Model.ExceptionDetails )
		</text>
	}
</div>

@helper RenderException( ExceptionInfo ei ) {
	if ( ei == null ) {
		return;
	}
	<ul>
		@if ( !string.IsNullOrEmpty( ei.Message ) ) {
			<li><span class="view-label">Message:</span> <span class="view-data">@Html.CRLF( ei.Message )</span></li>
		}
		@if ( !string.IsNullOrEmpty( ei.ExceptionType ) ) {
			<li><span class="view-label">ExceptionType:</span> <span class="view-data">@ei.ExceptionType</span></li>
		}
		@if ( !string.IsNullOrEmpty( ei.StackTrace ) ) {
			<li>
				<div class="view-label">StackTrace:</div>
				<div class="view-data stack-trace">@Html.CRLF( ei.StackTrace )</div>
			</li>
		}
		@if (!ei.Data.IsNullOrEmpty() ) {
			foreach (string d in ei.Data) {
				<li>@Html.CRLF( d )</li>
			}
		}
		@if (ei.InnerException != null ) {
			<li>@this.RenderException( ei.InnerException )</li>@* recurse *@
		}
		@if (!ei.InnerExceptions.IsNullOrEmpty() ) {
			foreach (ExceptionInfo innerEi in ei.InnerExceptions) {
				<li>@this.RenderException( innerEi )</li>@* recurse *@
			}
		}
	</ul>
}
